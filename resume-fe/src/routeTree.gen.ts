/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as ResumesRouteImport } from "./routes/resumes/route";
import { Route as IndexImport } from "./routes/index";
import { Route as ResumesUploadImport } from "./routes/resumes/upload";
import { Route as ResumesResumeIdImport } from "./routes/resumes/$resumeId";

// Create/Update Routes

const ResumesRouteRoute = ResumesRouteImport.update({
  id: "/resumes",
  path: "/resumes",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  id: "/",
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const ResumesUploadRoute = ResumesUploadImport.update({
  id: "/upload",
  path: "/upload",
  getParentRoute: () => ResumesRouteRoute,
} as any);

const ResumesResumeIdRoute = ResumesResumeIdImport.update({
  id: "/$resumeId",
  path: "/$resumeId",
  getParentRoute: () => ResumesRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      id: "/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/resumes": {
      id: "/resumes";
      path: "/resumes";
      fullPath: "/resumes";
      preLoaderRoute: typeof ResumesRouteImport;
      parentRoute: typeof rootRoute;
    };
    "/resumes/$resumeId": {
      id: "/resumes/$resumeId";
      path: "/$resumeId";
      fullPath: "/resumes/$resumeId";
      preLoaderRoute: typeof ResumesResumeIdImport;
      parentRoute: typeof ResumesRouteImport;
    };
    "/resumes/upload": {
      id: "/resumes/upload";
      path: "/upload";
      fullPath: "/resumes/upload";
      preLoaderRoute: typeof ResumesUploadImport;
      parentRoute: typeof ResumesRouteImport;
    };
  }
}

// Create and export the route tree

interface ResumesRouteRouteChildren {
  ResumesResumeIdRoute: typeof ResumesResumeIdRoute;
  ResumesUploadRoute: typeof ResumesUploadRoute;
}

const ResumesRouteRouteChildren: ResumesRouteRouteChildren = {
  ResumesResumeIdRoute: ResumesResumeIdRoute,
  ResumesUploadRoute: ResumesUploadRoute,
};

const ResumesRouteRouteWithChildren = ResumesRouteRoute._addFileChildren(
  ResumesRouteRouteChildren,
);

export interface FileRoutesByFullPath {
  "/": typeof IndexRoute;
  "/resumes": typeof ResumesRouteRouteWithChildren;
  "/resumes/$resumeId": typeof ResumesResumeIdRoute;
  "/resumes/upload": typeof ResumesUploadRoute;
}

export interface FileRoutesByTo {
  "/": typeof IndexRoute;
  "/resumes": typeof ResumesRouteRouteWithChildren;
  "/resumes/$resumeId": typeof ResumesResumeIdRoute;
  "/resumes/upload": typeof ResumesUploadRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/": typeof IndexRoute;
  "/resumes": typeof ResumesRouteRouteWithChildren;
  "/resumes/$resumeId": typeof ResumesResumeIdRoute;
  "/resumes/upload": typeof ResumesUploadRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "/" | "/resumes" | "/resumes/$resumeId" | "/resumes/upload";
  fileRoutesByTo: FileRoutesByTo;
  to: "/" | "/resumes" | "/resumes/$resumeId" | "/resumes/upload";
  id: "__root__" | "/" | "/resumes" | "/resumes/$resumeId" | "/resumes/upload";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  ResumesRouteRoute: typeof ResumesRouteRouteWithChildren;
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ResumesRouteRoute: ResumesRouteRouteWithChildren,
};

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/resumes"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/resumes": {
      "filePath": "resumes/route.tsx",
      "children": [
        "/resumes/$resumeId",
        "/resumes/upload"
      ]
    },
    "/resumes/$resumeId": {
      "filePath": "resumes/$resumeId.tsx",
      "parent": "/resumes"
    },
    "/resumes/upload": {
      "filePath": "resumes/upload.tsx",
      "parent": "/resumes"
    }
  }
}
ROUTE_MANIFEST_END */
