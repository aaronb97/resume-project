// This file is auto-generated by @hey-api/openapi-ts

import {
  type Options as ClientOptions,
  type TDataShape,
  type Client,
  formDataBodySerializer,
} from "@hey-api/client-fetch";
import type {
  PostResumesData,
  PostResumesResponse,
  GetResumesByIdData,
  GetResumesByIdResponse,
  PostResumesRecommendData,
  PostResumesRecommendResponse,
  PostResumesProcessRecommendationsData,
  GetData,
  GetResponse,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

export const postResumes = <ThrowOnError extends boolean = false>(
  options?: Options<PostResumesData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).post<
    PostResumesResponse,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/resumes",
    ...options,
    headers: {
      "Content-Type": null,
      ...options?.headers,
    },
  });
};

export const getResumesById = <ThrowOnError extends boolean = false>(
  options: Options<GetResumesByIdData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).get<
    GetResumesByIdResponse,
    unknown,
    ThrowOnError
  >({
    url: "/resumes/{id}",
    ...options,
  });
};

export const postResumesRecommend = <ThrowOnError extends boolean = false>(
  options: Options<PostResumesRecommendData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<
    PostResumesRecommendResponse,
    unknown,
    ThrowOnError
  >({
    url: "/resumes/recommend",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

export const postResumesProcessRecommendations = <
  ThrowOnError extends boolean = false,
>(
  options: Options<PostResumesProcessRecommendationsData, ThrowOnError>,
) => {
  return (options.client ?? _heyApiClient).post<unknown, unknown, ThrowOnError>(
    {
      url: "/resumes/processRecommendations",
      ...options,
      headers: {
        "Content-Type": "application/json",
        ...options?.headers,
      },
    },
  );
};

export const get = <ThrowOnError extends boolean = false>(
  options?: Options<GetData, ThrowOnError>,
) => {
  return (options?.client ?? _heyApiClient).get<
    GetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/",
    ...options,
  });
};
